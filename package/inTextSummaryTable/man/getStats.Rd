% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats-getStats.R
\name{getStats}
\alias{getStats}
\title{Get default set of statistics for one particular variable.}
\usage{
getStats(
  type = "summary",
  includeName = TRUE,
  x = NULL,
  nDecCont = getMaxNDecimals,
  nDecN = 0,
  nDecm = nDecN,
  formatPercentage = inTextSummaryTable:::formatPercentage
)
}
\arguments{
\item{type}{Character vector with type of statistics (multiple are possible):
\itemize{
\item{base statistics: }{
\itemize{
\item{'n': }{number of subjects}
\item{'m': }{number of records}
\item{'\%': }{percentage of subjects}
\item{'\%m': }{percentage of records.
Note: this is only available if \code{statsPerc} is set to 'statm'
in \code{\link{getSummaryStatisticsTable}} or \code{\link{computeSummaryStatisticsTable}}.
}
\item{'Mean' (only for continuous variable): }{mean}
\item{'Median' (only for continuous variable): }{median}
\item{'SE' (only for continuous variable): }{standard error}
\item{'SD' (only for continuous variable): }{standard deviation}
\item{'Min' (only for continuous variable): }{minimum}
\item{'Max' (only for continuous variable): }{maximum}
}}
\item{'summary': }{all statistics available for a continuous variable:
n, Mean, SD, SE, Median, Min, Max, \%, m}
\item{'count': }{all statistics available for a categorical variable: n, \%, m}
\item{'summary-default': }{default set of statistics for a continuous variable:
 n, Mean, SD, SE, Median, Min, Max}
\item{'count-default': }{default set of statistics for a categorical variable:
 n, \%}
\item{'n (\%)': }{number of subjects (and associated percentage)}
\item{'n/N (\%)': }{number of subjects/total number of subjects (percentage)}
\item{'m (\%)': }{number of records (and associated percentage).
Note: this is only available if \code{statsPerc} is set to 'statm'
in \code{\link{getSummaryStatisticsTable}} or \code{\link{computeSummaryStatisticsTable}}.
}
\item{'median (range)': }{median (minimum, maximum)}
\item{'median\\n(range)': }{median and (minimum, maximum) below (linebreak)}
\item{'mean (se)': }{mean and standard error}
\item{'mean (range)': }{mean and (minimum, maximum)}
}}

\item{includeName}{Logical, should the statistics name be included (TRUE by default)?
This is applied for the statistic names used in each for the set defined in \code{type};
and for the label of the list if \code{type} is of length 2.
If there are multiple \code{type} or statistics within a set, the names are retained (to avoid confusion).}

\item{x}{(optional, recommended for continuous variable) Numeric vector 
for which the statistics should be computed on 
(has an effect only for continuous variable).
If specified, this is used to derive the number of decimals to include.
If not specified, the values are rounded with \code{\link{formatC}}.}

\item{nDecCont}{Integer with base number of decimals 
for continuous variable, or function returning this number based on \code{x} 
(\code{\link{getNDecimals}} by default).}

\item{nDecN, nDecm}{Integer with number of decimals for number of subjects/records (0 by default).}

\item{formatPercentage}{Function used to format the percentage of the number of subjects
(see \code{\link{formatPercentage}} for default behaviour).}
}
\value{
(Optionally named) list of expression or call object containing
function to extract summary statistics.
If multiple \code{type} are specified, they are combined to a list.
}
\description{
This set of statistics is passed directly to the \code{stats} parameter
of the \code{\link{computeSummaryStatisticsTable}} function.
}
\examples{
## default set of statistics are available for:

# for count table:
getStats("count")
getStats("n (\%)")
getStats("n")
getStats("\%")
getStats("m")
getStats("\%m")
getStats("m (\%)")
# for continuous variable:
getStats("summary")
getStats("mean (se)")
getStats("median (range)")
getStats("median\n(range)")
getStats(c("Mean", "SE"))

## to not include statistic name in the table
getStats("median\n(range)", includeName = FALSE)
getStats(c("summary", "median\n(range)"), includeName = FALSE)

## to extract the number of decimals based on a continuous variable (see ?getMaxNDecimals) 
library(glpgUtilityFct)
data(ADaMDataPelican)
getStats(type = c('median (range)', 'mean (se)'), x = ADaMDataPelican$ADSL$WEIGHTBL)
# compare with when 'x' is not specified:
getStats(type = c('median (range)', 'mean (se)'))

## custom function to format the percentages:
getStats(type = "count", formatPercentage = function(x) round(x, 2))
}
\author{
Laure Cougnaud
}
